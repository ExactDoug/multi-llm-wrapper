/*
CSS Architecture Documentation
============================

This document provides an overview of the CSS architecture for the Multi-LLM Interface.
The styles are organized into modular files, each with a specific responsibility:

1. layout.css
------------
Purpose: Defines the fundamental layout structure and CSS variables
Contains:
- CSS custom properties (variables) for consistent theming
- Basic reset styles (* selector)
- Body and container layouts
- Grid system for LLM windows
- Core layout properties (width, height, flex, grid)

Example elements:
- .container: Main wrapper
- .top-section: Input and synthesis area
- .llm-grid: Grid layout for LLM windows


2. components.css
---------------
Purpose: Defines individual UI component styles
Contains:
- Section headers and content areas
- Input fields and textareas
- Buttons and interactive elements
- LLM window styles
- Markdown content styling

Example elements:
- .input-section: Query input area
- .synthesizer-section: Master synthesis area
- .llm-window: Individual LLM response containers
- .markdown-body: Markdown content styling


3. responsive.css
---------------
Purpose: Handles responsive design and media queries
Contains:
- Desktop breakpoints (1600px, 1200px)
- Mobile styles (768px)
- Small mobile devices (390px)
- Landscape mode adjustments
- High DPI screen optimizations
- Reduced motion preferences

Key breakpoints:
- 1600px: 3-column LLM grid
- 1200px: 2-column LLM grid
- 768px: Mobile layout
- 390px: Small mobile optimizations


4. animations.css
---------------
Purpose: Manages transitions and animations
Contains:
- Hover effects
- Expand/collapse transitions
- Overlay animations
- Loading states
- Reduced motion preferences

Example animations:
- LLM window hover effects
- Input section collapse/expand
- Overlay fade in/out
- Loading dots animation


Component Relationships
=====================

1. Top Section
-------------
HTML: <div class="top-section">
CSS Files:
- layout.css: Basic structure and dimensions
- components.css: Visual styling and interactions
- responsive.css: Mobile adaptations
- animations.css: Collapse/expand behavior

2. LLM Windows
-------------
HTML: <div class="llm-window">
CSS Files:
- layout.css: Grid positioning and dimensions
- components.css: Window styling and content layout
- responsive.css: Grid adjustments for different screens
- animations.css: Hover effects and transitions

3. Markdown Content
-----------------
HTML: <div class="markdown-body">
CSS Files:
- components.css: Basic markdown styling
- responsive.css: Mobile text adjustments
- animations.css: Content transitions

4. Overlay/Expanded View
----------------------
HTML: <div class="overlay">
CSS Files:
- components.css: Overlay and window styling
- responsive.css: Full-screen mobile view
- animations.css: Show/hide transitions


CSS Variables (defined in layout.css)
===================================
--primary-color: #2563eb      // Primary blue for main actions
--secondary-color: #3b82f6    // Secondary blue for hover states
--background-color: #f8fafc   // Light background
--window-bg: #ffffff          // Window background
--border-color: #e2e8f0       // Border color
--text-color: #1e293b        // Main text color
--shadow: [shadow value]      // Consistent shadow
--primary-section-border      // Border for main sections
--llm-section-border         // Border for LLM windows
--input-bg                   // Input background color


Best Practices
=============
1. Use CSS variables for consistent theming
2. Follow mobile-first approach in responsive.css
3. Keep animations subtle and disable when reduced motion is preferred
4. Use BEM-like naming for component classes
5. Maintain separation of concerns across CSS files

Note: This CSS architecture follows a modular approach where each file has a specific responsibility.
When making changes, ensure you're modifying the appropriate file based on the type of style being changed.
*/